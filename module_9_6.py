from itertools import combinations  # Для создания комбинаций используем combinations из пакета itertools.

print("=== Генераторы. ====\n")


# Задача:
# Напишите функцию-генератор all_variants(text), которая принимает строку text и возвращает объект-генератор,
# при каждой итерации которого будет возвращаться подпоследовательности переданной строки.
#
# Пункты задачи:
# Напишите функцию-генератор all_variants(text).
# Опишите логику работы внутри функции all_variants.
# Вызовите функцию all_variants и выполните итерации.
# Примечания:
# Для функции генератора используйте оператор yield.
# *************************************************************************************************************
# === Функции ===
def all_variants(text):  # генератор all_variants(text), которая принимает строку text и возвращает объект-генератор,
    # при каждой итерации которого будет возвращаться подпоследовательности переданной строки.
    i = 1
    while i < len(text) + 1:  # Создаем комбинации подпоследовательностей для строки text
        for comb in combinations(text, i):  # Перебор комбинаций для i символов строки text
            yield ''.join(comb)
        i += 1

# === Прогон ===
a = all_variants("abc")
for i in a:
    print(i)

print('\n=== Конец обработки === ')
