
print("=== Позиционирование в файле. ====\n")


# Задача "Записать и запомнить.":
# Создайте функцию custom_write(file_name, strings), которая принимает аргументы file_name - название файла для записи,
# strings - список строк для записи.
# Функция должна:
# 1.Записывать в файл file_name все строки из списка strings, каждая на новой строке.
# 2.Возвращать словарь strings_positions, где ключом будет кортеж (<номер строки>, <байт начала строки>),
# а значением - записываемая строка. Для получения номера байта начала строки используйте метод tell() перед записью.
# Пример полученного словаря:
# {(1, 0): 'Text for tell.', (2, 16): 'Используйте кодировку utf-8.'}
# Где:
# 1, 2 - номера записанных строк.
# 0, 16 - номера байт, на которых началась запись строк.
# 'Text for tell.', 'Используйте кодировку utf-8.' - сами строки.
# Примечания:
# 1.Не забывайте при записи в файл добавлять спец. символ перехода на следующую строку в конце - '\n'.
# 2.Не забывайте закрывать файл вызывая метод close() у объектов файла.
# 3.Помните, что при использовании символов не принадлежащих таблице ASCII, вы используете больше байт для записи символа.
# Соответственно для чтения и записи информации из/в файл(-f) потребуется другая кодировка - utf-8.
# ***********************************************************************************************************
# === Функции

def init_file(file_name: str = ""):  # Метод затирки файла ( >file )
    file = open(file_name, 'w', encoding='utf-8')
    file.write('')
    file.close()


def custom_write(file_name: str = "", strings: list = None):
    if file_name == "":
        exit()
    res = dict()  # Формируем словарик для возврата функцией.
    file = open(file_name, 'a+',
                encoding='utf-8')  # Чтобы два раза не открывать - открываем файл в режиме добавления и чтения
    file.seek(0)  # Поднимаем курсор файла наверх, так при открытии с префиксом 'a' он опускается на дно.
    next_line = len(list_file := file.read().split('\n'))  # Выясняем номер следующей строки для добавления в файл
                                                            # и опускаем курсор файла на дно.
    if strings:  # Если в функцию передали строки, то
        for string in strings:  # Разбираем список переданных строк.
            curr_pos = file.tell()  # Записываем курсор файла.
            res.update({(next_line, curr_pos): string})  # Формируем словарик для возврата функцией.
            file.write(f'{string}\n')  # Записываем данные в файл.
            next_line += 1  # Увеличиваем номер следующей строки для добавления в файл.
    file.close()  # Закрываем файл.
    return res  # Возвращаем словарик.


# === Прогон ===
# init_file('test.txt') # раскомментируем для очистки файла перед работой.
info = [
    'Text for tell.',
    'Используйте кодировку utf-8.',
    'Because there are 2 languages!',
    'Спасибо!'
]

# result = custom_write('test.txt')
# result = custom_write()
result = custom_write('test.txt', info)
# print (result)
for elem in result.items():
    print(elem)

print('\n=== Конец обработки === ')
